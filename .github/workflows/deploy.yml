name: Deploy

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production

    steps:
      # 1Ô∏è‚É£ R√©cup√©rer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Installer les d√©pendances
      - name: Install dependencies
        run: npm ci

      # 3Ô∏è‚É£ Lancer les tests (si tu en as)
      - name: Run tests
        run: npm test || echo "‚ö†Ô∏è Aucun test d√©fini"

      # 4Ô∏è‚É£ V√©rifier que c'est bien en prod
      - name: Check environment
        run: |
          if [ "$NODE_ENV" != "production" ]; then
            echo "üõë Pas en production, annulation du d√©ploiement"
            exit 0
          fi
          echo "‚úÖ Environnement de production d√©tect√©, on continue..."

      # 5Ô∏è‚É£ Installer Render CLI proprement
      - name: Install Render CLI
        run: |
          RENDER_VERSION="1.1.0"
          curl -L "https://github.com/render-oss/cli/releases/download/v${RENDER_VERSION}/cli_${RENDER_VERSION}_linux_amd64.zip" -o render.zip
          unzip -j -o render.zip cli_v${RENDER_VERSION}   # -j = juste le binaire, -o = √©craser
          chmod +x cli_v${RENDER_VERSION}
          sudo mv cli_v${RENDER_VERSION} /usr/local/bin/render
          render --version

      # 6Ô∏è‚É£ D√©ploiement sur Render
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          CI: true
        run: |
          DEPLOY_OUTPUT=$(render deploys create ${{ secrets.RENDER_SERVICE_ID }} --confirm --output json)
          echo "$DEPLOY_OUTPUT"

          DEPLOY_URL=$(echo "$DEPLOY_OUTPUT" | grep -oP '(?<="url":")[^"]*')
          echo "üöÄ D√©ploiement lanc√© sur : $DEPLOY_URL"
