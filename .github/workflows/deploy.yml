name: Deploy to Render

on:
  push:
    branches:
      - master
  workflow_dispatch: # Permet de d√©clencher manuellement le d√©ploiement

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production # Force le mode production

    steps:
      # 1Ô∏è‚É£ R√©cup√©rer le code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Installer les d√©pendances
      - name: Install dependencies
        run: npm ci

      # 3Ô∏è‚É£ Lancer les tests (optionnel)
      - name: Run tests
        run: npm test || echo "‚ö†Ô∏è Tests ignor√©s ou √©chou√©s"

      # 4Ô∏è‚É£ V√©rifier l'environnement
      - name: Check environment
        run: |
          if [ "$NODE_ENV" != "production" ]; then
            echo "üõë Pas en production, annulation"
            exit 1
          fi
          echo "‚úÖ Environnement de production d√©tect√©"

      # 5Ô∏è‚É£ Installer le CLI Render
      - name: Install Render CLI
        run: |
          curl -L https://github.com/render-oss/cli/releases/download/v1.1.0/cli_1.1.0_linux_amd64.zip -o render.zip
          unzip render.zip
          chmod +x render
          sudo mv render /usr/local/bin/render
          render --version

      # 6Ô∏è‚É£ D√©ployer sur Render
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          CI: true
        run: |
          echo "üöÄ Lancement du d√©ploiement sur Render..."
          DEPLOY_OUTPUT=$(render deploys create ${{ secrets.RENDER_SERVICE_ID }} --confirm --output json)
          echo "$DEPLOY_OUTPUT"

          DEPLOY_URL=$(echo "$DEPLOY_OUTPUT" | grep -oP '(?<="url":")[^"]*')
          echo "‚úÖ D√©ploiement lanc√© sur : $DEPLOY_URL"
